FROM node:18-alpine

WORKDIR /app

RUN apk add --no-cache \
    openssl \
    openssl-dev \
    libc6-compat

COPY package.json package-lock.json ./

COPY prisma/schema.prisma prisma/

RUN npm ci

COPY . .

# ENV

ARG NEXTAUTH_SECRET
ENV NEXTAUTH_SECRET=${NEXTAUTH_SECRET}

ARG NEXTAUTH_URL
ENV NEXTAUTH_URL=${NEXTAUTH_URL}

ARG NEXT_PUBLIC_BASE_URL
ENV NEXT_PUBLIC_BASE_URL=${NEXT_PUBLIC_BASE_URL}

ARG NEXT_PUBLIC_MARKETING_URL
ENV NEXT_PUBLIC_MARKETING_URL=${NEXT_PUBLIC_MARKETING_URL}

ARG POSTGRES_PRISMA_URL
ENV POSTGRES_PRISMA_URL=${POSTGRES_PRISMA_URL}

ARG POSTGRES_PRISMA_URL_NON_POOLING
ENV POSTGRES_PRISMA_URL_NON_POOLING=${POSTGRES_PRISMA_URL_NON_POOLING}

ARG BLOB_READ_WRITE_TOKEN
ENV BLOB_READ_WRITE_TOKEN=${BLOB_READ_WRITE_TOKEN}

ARG GOOGLE_CLIENT_ID
ENV GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}

ARG GOOGLE_CLIENT_SECRET
ENV GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}

ARG RESEND_API_KEY
ENV RESEND_API_KEY=${RESEND_API_KEY}

ARG TINYBIRD_TOKEN
ENV TINYBIRD_TOKEN=${TINYBIRD_TOKEN}

# * QTASH
ARG QSTASH_TOKEN
ENV QSTASH_TOKEN=${QSTASH_TOKEN}

ARG QSTASH_CURRENT_SIGNING_KEY
ENV QSTASH_CURRENT_SIGNING_KEY=${QSTASH_CURRENT_SIGNING_KEY}

ARG QSTASH_NEXT_SIGNING_KEY
ENV QSTASH_NEXT_SIGNING_KEY=${QSTASH_NEXT_SIGNING_KEY}

# * HANKO
ARG HANKO_API_KEY
ENV HANKO_API_KEY=${HANKO_API_KEY}

ARG NEXT_PUBLIC_HANKO_TENANT_ID
ENV NEXT_PUBLIC_HANKO_TENANT_ID=${NEXT_PUBLIC_HANKO_TENANT_ID}

# * TRIGGER V3
ARG TRIGGER_SECRET_KEY
ENV TRIGGER_SECRET_KEY=${TRIGGER_SECRET_KEY}

ARG TRIGGER_API_URL
ENV TRIGGER_API_URL=${TRIGGER_API_URL}

# * STORAGE
ARG NEXT_PUBLIC_UPLOAD_TRANSPORT
ENV NEXT_PUBLIC_UPLOAD_TRANSPORT=${NEXT_PUBLIC_UPLOAD_TRANSPORT}

ARG NEXT_PRIVATE_UPLOAD_DISTRIBUTION_HOST
ENV NEXT_PRIVATE_UPLOAD_DISTRIBUTION_HOST=${NEXT_PRIVATE_UPLOAD_DISTRIBUTION_HOST}

ARG NEXT_PRIVATE_UPLOAD_ENDPOINT
ENV NEXT_PRIVATE_UPLOAD_ENDPOINT=${NEXT_PRIVATE_UPLOAD_ENDPOINT}

ARG NEXT_PRIVATE_UPLOAD_REGION
ENV NEXT_PRIVATE_UPLOAD_REGION=${NEXT_PRIVATE_UPLOAD_REGION}

ARG NEXT_PRIVATE_UPLOAD_BUCKET
ENV NEXT_PRIVATE_UPLOAD_BUCKET=${NEXT_PRIVATE_UPLOAD_BUCKET}

ARG NEXT_PRIVATE_UPLOAD_ACCESS_KEY_ID
ENV NEXT_PRIVATE_UPLOAD_ACCESS_KEY_ID=${NEXT_PRIVATE_UPLOAD_ACCESS_KEY_ID}

ARG NEXT_PRIVATE_UPLOAD_SECRET_ACCESS_KEY
ENV NEXT_PRIVATE_UPLOAD_SECRET_ACCESS_KEY=${NEXT_PRIVATE_UPLOAD_SECRET_ACCESS_KEY}

ARG NEXT_PRIVATE_UPLOAD_DISTRIBUTION_DOMAIN
ENV NEXT_PRIVATE_UPLOAD_DISTRIBUTION_DOMAIN=${NEXT_PRIVATE_UPLOAD_DISTRIBUTION_DOMAIN}

ARG NEXT_PRIVATE_UPLOAD_DISTRIBUTION_KEY_ID
ENV NEXT_PRIVATE_UPLOAD_DISTRIBUTION_KEY_ID=${NEXT_PRIVATE_UPLOAD_DISTRIBUTION_KEY_ID}

ARG NEXT_PRIVATE_UPLOAD_DISTRIBUTION_KEY_CONTENTS
ENV NEXT_PRIVATE_UPLOAD_DISTRIBUTION_KEY_CONTENTS=${NEXT_PRIVATE_UPLOAD_DISTRIBUTION_KEY_CONTENTS}

ARG NEXT_PRIVATE_DOCUMENT_PASSWORD_KEY
ENV NEXT_PRIVATE_DOCUMENT_PASSWORD_KEY=${NEXT_PRIVATE_DOCUMENT_PASSWORD_KEY}

# * REDIS
ARG UPSTASH_REDIS_REST_LOCKER_URL
ENV UPSTASH_REDIS_REST_LOCKER_URL=${UPSTASH_REDIS_REST_LOCKER_URL}

ARG UPSTASH_REDIS_REST_LOCKER_TOKEN
ENV UPSTASH_REDIS_REST_LOCKER_TOKEN=${UPSTASH_REDIS_REST_LOCKER_TOKEN}

# * OPENAI
ARG OPENAI_API_KEY
ENV OPENAI_API_KEY=${OPENAI_API_KEY}

ARG NEXT_PUBLIC_STRIPE_PUBLIC_KEY
ENV NEXT_PUBLIC_STRIPE_PUBLIC_KEY=${NEXT_PUBLIC_STRIPE_PUBLIC_KEY}

ARG STRIPE_SECRET_KEY
ENV STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}

# * VERIFICATION
ARG NEXT_PRIVATE_VERIFICATION_SECRET
ENV NEXT_PRIVATE_VERIFICATION_SECRET=${NEXT_PRIVATE_VERIFICATION_SECRET}

# WEBHOOKS
ARG NEXT_PUBLIC_WEBHOOK_BASE_URL
ENV NEXT_PUBLIC_WEBHOOK_BASE_URL=${NEXT_PUBLIC_WEBHOOK_BASE_URL}

ARG NEXT_PUBLIC_WEBHOOK_BASE_HOST
ENV NEXT_PUBLIC_WEBHOOK_BASE_HOST=${NEXT_PUBLIC_WEBHOOK_BASE_HOST}

# PRISMA PUSH
RUN npx prisma migrate deploy

RUN npm run build

ARG PORT
ENV PORT=${PORT}

EXPOSE ${PORT}

CMD ["npm", "start"]
